(set-logic QF_SLAH)

(declare-datatypes ((data_t 0)) (((c_data_t (sz Int)))))

(declare-heap (Int data_t))

(define-fun hck ((?x Int) (?y Int) (?v Int)) Bool
	(and
		(>= (- ?y ?x) 2) (<= (- ?y ?x) ?v)
		(sep (pto ?x (c_data_t (- ?y ?x))) (blk (+ ?x 1) ?y))
))

(define-fun-rec hls ((?x Int) (?y Int) (?v Int)) Bool
	(or
		(and (= ?x ?y) (_ emp Int data_t))
		(exists ((?w Int)) (sep (hck ?x ?w ?v) (hls ?w ?y ?v)))
))

(declare-const x0 Int)
(declare-const x1 Int)
(declare-const v0 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(declare-const x4 Int)
(declare-const x5 Int)
(declare-const x6 Int)
(declare-const x7 Int)
(declare-const x8 Int)
(declare-const x9 Int)
(declare-const x10 Int)
(declare-const x11 Int)
(declare-const x12 Int)
(declare-const x13 Int)
(declare-const v12 Int)
(declare-const x14 Int)
(declare-const x15 Int)
(declare-const x16 Int)
(declare-const x17 Int)
(declare-const x18 Int)
(declare-const x19 Int)
(declare-const v18 Int)
(declare-const x20 Int)
(declare-const x21 Int)
(declare-const x22 Int)
(declare-const x23 Int)
(declare-const x24 Int)
(declare-const x25 Int)
(declare-const x26 Int)
(declare-const x27 Int)
(declare-const x28 Int)
(declare-const x29 Int)
(declare-const x30 Int)
(declare-const x31 Int)
(declare-const x32 Int)
(declare-const x33 Int)
(declare-const x34 Int)
(declare-const x35 Int)
(declare-const v34 Int)
(declare-const x36 Int)
(declare-const x37 Int)
(declare-const v36 Int)
(declare-const x38 Int)
(declare-const x39 Int)
(declare-const x40 Int)
(declare-const x41 Int)
(declare-const v40 Int)
(declare-const x42 Int)
(declare-const x43 Int)
(declare-const v42 Int)
(declare-const x44 Int)
(declare-const x45 Int)
(declare-const x46 Int)
(declare-const x47 Int)
(declare-const v46 Int)
(declare-const x48 Int)
(declare-const x49 Int)
(declare-const v48 Int)
(declare-const x50 Int)
(declare-const x51 Int)
(declare-const x52 Int)
(declare-const x53 Int)
(declare-const v52 Int)
(declare-const x54 Int)
(declare-const x55 Int)
(declare-const x56 Int)
(declare-const x57 Int)
(declare-const v56 Int)
(declare-const x58 Int)
(declare-const x59 Int)
(declare-const x60 Int)
(declare-const x61 Int)
(declare-const x62 Int)
(declare-const x63 Int)
(declare-const x64 Int)
(declare-const x65 Int)
(declare-const v64 Int)
(declare-const x66 Int)
(declare-const x67 Int)
(declare-const v66 Int)
(declare-const x68 Int)
(declare-const x69 Int)
(declare-const x70 Int)
(declare-const x71 Int)
(declare-const x72 Int)
(declare-const x73 Int)
(declare-const x74 Int)
(declare-const x75 Int)
(declare-const x76 Int)
(declare-const x77 Int)
(declare-const x78 Int)
(declare-const x79 Int)
(declare-const x80 Int)
(declare-const x81 Int)
(declare-const x82 Int)
(declare-const x83 Int)
(declare-const x84 Int)
(declare-const x85 Int)
(declare-const x86 Int)
(declare-const x87 Int)
(declare-const x88 Int)
(declare-const x89 Int)
(declare-const x90 Int)
(declare-const x91 Int)
(declare-const v90 Int)
(declare-const x92 Int)
(declare-const x93 Int)
(declare-const x94 Int)
(declare-const x95 Int)
(declare-const x96 Int)
(declare-const x97 Int)
(declare-const v96 Int)
(declare-const x98 Int)
(declare-const x99 Int)
(declare-const x100 Int)
(declare-const x101 Int)
(declare-const v100 Int)
(declare-const x102 Int)
(declare-const x103 Int)
(declare-const x104 Int)
(declare-const x105 Int)
(declare-const x106 Int)
(declare-const x107 Int)
(declare-const x108 Int)
(declare-const x109 Int)
(declare-const v108 Int)
(declare-const x110 Int)
(declare-const x111 Int)
(declare-const x112 Int)
(declare-const x113 Int)
(declare-const x114 Int)
(declare-const x115 Int)
(declare-const x116 Int)
(declare-const x117 Int)
(declare-const x118 Int)
(declare-const x119 Int)
(declare-const x120 Int)
(declare-const x121 Int)
(declare-const v120 Int)
(declare-const x122 Int)
(declare-const x123 Int)
(declare-const x124 Int)
(declare-const x125 Int)
(declare-const x126 Int)
(declare-const x127 Int)
(declare-const x128 Int)
(declare-const x129 Int)
(declare-const v128 Int)

(assert(and
(< x99 x30) (= x57 x45) (distinct x18 x68) (= x116 x33) (= x38 x39) (distinct x61 x32) (distinct x100 x70) (< x30 x28) (= x7 x104) (= x13 x49) (= x13 x81) (= x99 x84) (< x46 x43) (< x129 x45) (< x37 x96) (distinct x54 x14) (= x22 x70) 
(sep
(hls x0 x1 v0)
(pto x2 (c_data_t x3))
(pto x4 (c_data_t x5))
(blk x6 x7)
(pto x8 (c_data_t x9))
(pto x10 (c_data_t x11))
(hls x12 x13 v12)
(blk x14 x15)
(blk x16 x17)
(hls x18 x19 v18)
(pto x20 (c_data_t x21))
(pto x22 (c_data_t x23))
(pto x24 (c_data_t x25))
(blk x26 x27)
(blk x28 x29)
(pto x30 (c_data_t x31))
(pto x32 (c_data_t x33))
(hls x34 x35 v34)
(hls x36 x37 v36)
(blk x38 x39)
(hls x40 x41 v40)
(hls x42 x43 v42)
(pto x44 (c_data_t x45))
(hls x46 x47 v46)
(hls x48 x49 v48)
(pto x50 (c_data_t x51))
(hls x52 x53 v52)
(pto x54 (c_data_t x55))
(hls x56 x57 v56)
(blk x58 x59)
(blk x60 x61)
(blk x62 x63)
(hls x64 x65 v64)
(hls x66 x67 v66)
(blk x68 x69)
(blk x70 x71)
(pto x72 (c_data_t x73))
(blk x74 x75)
(blk x76 x77)
(blk x78 x79)
(pto x80 (c_data_t x81))
(pto x82 (c_data_t x83))
(blk x84 x85)
(blk x86 x87)
(pto x88 (c_data_t x89))
(hls x90 x91 v90)
(pto x92 (c_data_t x93))
(pto x94 (c_data_t x95))
(hls x96 x97 v96)
(blk x98 x99)
(hls x100 x101 v100)
(blk x102 x103)
(blk x104 x105)
(blk x106 x107)
(hls x108 x109 v108)
(blk x110 x111)
(blk x112 x113)
(blk x114 x115)
(blk x116 x117)
(pto x118 (c_data_t x119))
(hls x120 x121 v120)
(blk x122 x123)
(pto x124 (c_data_t x125))
(pto x126 (c_data_t x127))
(hls x128 x129 v128)
)))

(check-sat)