(set-logic QF_SLAH)

(declare-datatypes ((data_t 0)) (((c_data_t (sz Int)))))

(declare-heap (Int data_t))

(define-fun hck ((?x Int) (?y Int) (?v Int)) Bool
	(and
		(>= (- ?y ?x) 2) (<= (- ?y ?x) ?v)
		(sep (pto ?x (c_data_t (- ?y ?x))) (blk (+ ?x 1) ?y))
))

(define-fun-rec hls ((?x Int) (?y Int) (?v Int)) Bool
	(or
		(and (= ?x ?y) (_ emp Int data_t))
		(exists ((?w Int)) (sep (hck ?x ?w ?v) (hls ?w ?y ?v)))
))

(declare-const x0 Int)
(declare-const x1 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(declare-const x4 Int)
(declare-const x5 Int)
(declare-const x6 Int)
(declare-const x7 Int)
(declare-const x8 Int)
(declare-const x9 Int)
(declare-const x10 Int)
(declare-const x11 Int)
(declare-const v10 Int)
(declare-const x12 Int)
(declare-const x13 Int)
(declare-const x14 Int)
(declare-const x15 Int)
(declare-const x16 Int)
(declare-const x17 Int)
(declare-const v16 Int)
(declare-const x18 Int)
(declare-const x19 Int)
(declare-const v18 Int)
(declare-const x20 Int)
(declare-const x21 Int)
(declare-const v20 Int)
(declare-const x22 Int)
(declare-const x23 Int)
(declare-const v22 Int)
(declare-const x24 Int)
(declare-const x25 Int)
(declare-const v24 Int)
(declare-const x26 Int)
(declare-const x27 Int)
(declare-const x28 Int)
(declare-const x29 Int)
(declare-const x30 Int)
(declare-const x31 Int)
(declare-const v30 Int)
(declare-const x32 Int)
(declare-const x33 Int)
(declare-const v32 Int)
(declare-const x34 Int)
(declare-const x35 Int)
(declare-const v34 Int)
(declare-const x36 Int)
(declare-const x37 Int)
(declare-const x38 Int)
(declare-const x39 Int)
(declare-const x40 Int)
(declare-const x41 Int)
(declare-const x42 Int)
(declare-const x43 Int)
(declare-const v42 Int)
(declare-const x44 Int)
(declare-const x45 Int)
(declare-const x46 Int)
(declare-const x47 Int)
(declare-const v46 Int)
(declare-const x48 Int)
(declare-const x49 Int)
(declare-const v48 Int)
(declare-const x50 Int)
(declare-const x51 Int)
(declare-const x52 Int)
(declare-const x53 Int)
(declare-const x54 Int)
(declare-const x55 Int)
(declare-const x56 Int)
(declare-const x57 Int)
(declare-const x58 Int)
(declare-const x59 Int)
(declare-const x60 Int)
(declare-const x61 Int)
(declare-const x62 Int)
(declare-const x63 Int)
(declare-const x64 Int)
(declare-const x65 Int)
(declare-const v64 Int)
(declare-const x66 Int)
(declare-const x67 Int)
(declare-const x68 Int)
(declare-const x69 Int)
(declare-const x70 Int)
(declare-const x71 Int)
(declare-const v70 Int)
(declare-const x72 Int)
(declare-const x73 Int)
(declare-const x74 Int)
(declare-const x75 Int)
(declare-const v74 Int)
(declare-const x76 Int)
(declare-const x77 Int)
(declare-const x78 Int)
(declare-const x79 Int)
(declare-const v78 Int)
(declare-const x80 Int)
(declare-const x81 Int)
(declare-const x82 Int)
(declare-const x83 Int)
(declare-const v82 Int)
(declare-const x84 Int)
(declare-const x85 Int)
(declare-const v84 Int)
(declare-const x86 Int)
(declare-const x87 Int)
(declare-const x88 Int)
(declare-const x89 Int)
(declare-const x90 Int)
(declare-const x91 Int)
(declare-const v90 Int)
(declare-const x92 Int)
(declare-const x93 Int)
(declare-const x94 Int)
(declare-const x95 Int)
(declare-const x96 Int)
(declare-const x97 Int)
(declare-const x98 Int)
(declare-const x99 Int)
(declare-const v98 Int)
(declare-const x100 Int)
(declare-const x101 Int)
(declare-const v100 Int)
(declare-const x102 Int)
(declare-const x103 Int)
(declare-const x104 Int)
(declare-const x105 Int)
(declare-const v104 Int)
(declare-const x106 Int)
(declare-const x107 Int)
(declare-const x108 Int)
(declare-const x109 Int)
(declare-const v108 Int)
(declare-const x110 Int)
(declare-const x111 Int)
(declare-const v110 Int)
(declare-const x112 Int)
(declare-const x113 Int)
(declare-const x114 Int)
(declare-const x115 Int)
(declare-const x116 Int)
(declare-const x117 Int)
(declare-const v116 Int)
(declare-const x118 Int)
(declare-const x119 Int)

(assert(and
(= x58 x67) (distinct x19 x55) (< x108 x116) (= x74 x97) (distinct x38 x58) (= x98 x92) (distinct x25 x12) (= x101 x58) (distinct x96 x33) (= x43 x10) (distinct x22 x32) (= x37 x97) (= x117 x36) (= x119 x53) (< x15 x113) (< x110 x117) (= x45 x101) (distinct x89 x71) 
(sep
(blk x0 x1)
(pto x2 (c_data_t x3))
(blk x4 x5)
(blk x6 x7)
(pto x8 (c_data_t x9))
(hls x10 x11 v10)
(pto x12 (c_data_t x13))
(blk x14 x15)
(hls x16 x17 v16)
(hls x18 x19 v18)
(hls x20 x21 v20)
(hls x22 x23 v22)
(hls x24 x25 v24)
(blk x26 x27)
(pto x28 (c_data_t x29))
(hls x30 x31 v30)
(hls x32 x33 v32)
(hls x34 x35 v34)
(pto x36 (c_data_t x37))
(blk x38 x39)
(pto x40 (c_data_t x41))
(hls x42 x43 v42)
(pto x44 (c_data_t x45))
(hls x46 x47 v46)
(hls x48 x49 v48)
(pto x50 (c_data_t x51))
(blk x52 x53)
(pto x54 (c_data_t x55))
(blk x56 x57)
(pto x58 (c_data_t x59))
(pto x60 (c_data_t x61))
(pto x62 (c_data_t x63))
(hls x64 x65 v64)
(pto x66 (c_data_t x67))
(pto x68 (c_data_t x69))
(hls x70 x71 v70)
(blk x72 x73)
(hls x74 x75 v74)
(blk x76 x77)
(hls x78 x79 v78)
(pto x80 (c_data_t x81))
(hls x82 x83 v82)
(hls x84 x85 v84)
(pto x86 (c_data_t x87))
(blk x88 x89)
(hls x90 x91 v90)
(pto x92 (c_data_t x93))
(blk x94 x95)
(blk x96 x97)
(hls x98 x99 v98)
(hls x100 x101 v100)
(blk x102 x103)
(hls x104 x105 v104)
(blk x106 x107)
(hls x108 x109 v108)
(hls x110 x111 v110)
(pto x112 (c_data_t x113))
(blk x114 x115)
(hls x116 x117 v116)
(blk x118 x119)
)))

(check-sat)