(set-logic QF_SLAH)

(declare-datatypes ((data_t 0)) (((c_data_t (sz Int)))))

(declare-heap (Int data_t))

(define-fun hck ((?x Int) (?y Int) (?v Int)) Bool
	(and
		(>= (- ?y ?x) 2) (<= (- ?y ?x) ?v)
		(sep (pto ?x (c_data_t (- ?y ?x))) (blk (+ ?x 1) ?y))
))

(define-fun-rec hls ((?x Int) (?y Int) (?v Int)) Bool
	(or
		(and (= ?x ?y) (_ emp Int data_t))
		(exists ((?w Int)) (sep (hck ?x ?w ?v) (hls ?w ?y ?v)))
))

(declare-const x0 Int)
(declare-const x1 Int)
(declare-const v0 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(declare-const v2 Int)
(declare-const x4 Int)
(declare-const x5 Int)
(declare-const x6 Int)
(declare-const x7 Int)
(declare-const v6 Int)
(declare-const x8 Int)
(declare-const x9 Int)
(declare-const x10 Int)
(declare-const x11 Int)
(declare-const x12 Int)
(declare-const x13 Int)
(declare-const v12 Int)
(declare-const x14 Int)
(declare-const x15 Int)
(declare-const x16 Int)
(declare-const x17 Int)
(declare-const x18 Int)
(declare-const x19 Int)
(declare-const v18 Int)
(declare-const x20 Int)
(declare-const x21 Int)
(declare-const x22 Int)
(declare-const x23 Int)
(declare-const v22 Int)
(declare-const x24 Int)
(declare-const x25 Int)
(declare-const x26 Int)
(declare-const x27 Int)
(declare-const x28 Int)
(declare-const x29 Int)
(declare-const x30 Int)
(declare-const x31 Int)
(declare-const v30 Int)
(declare-const x32 Int)
(declare-const x33 Int)
(declare-const v32 Int)
(declare-const x34 Int)
(declare-const x35 Int)
(declare-const x36 Int)
(declare-const x37 Int)
(declare-const v36 Int)
(declare-const x38 Int)
(declare-const x39 Int)
(declare-const x40 Int)
(declare-const x41 Int)
(declare-const x42 Int)
(declare-const x43 Int)
(declare-const x44 Int)
(declare-const x45 Int)
(declare-const x46 Int)
(declare-const x47 Int)
(declare-const x48 Int)
(declare-const x49 Int)
(declare-const v48 Int)
(declare-const x50 Int)
(declare-const x51 Int)
(declare-const x52 Int)
(declare-const x53 Int)
(declare-const x54 Int)
(declare-const x55 Int)
(declare-const v54 Int)
(declare-const x56 Int)
(declare-const x57 Int)
(declare-const v56 Int)
(declare-const x58 Int)
(declare-const x59 Int)
(declare-const x60 Int)
(declare-const x61 Int)
(declare-const x62 Int)
(declare-const x63 Int)
(declare-const v62 Int)
(declare-const x64 Int)
(declare-const x65 Int)
(declare-const x66 Int)
(declare-const x67 Int)
(declare-const x68 Int)
(declare-const x69 Int)
(declare-const x70 Int)
(declare-const x71 Int)
(declare-const x72 Int)
(declare-const x73 Int)
(declare-const x74 Int)
(declare-const x75 Int)
(declare-const x76 Int)
(declare-const x77 Int)
(declare-const x78 Int)
(declare-const x79 Int)
(declare-const x80 Int)
(declare-const x81 Int)
(declare-const v80 Int)
(declare-const x82 Int)
(declare-const x83 Int)
(declare-const x84 Int)
(declare-const x85 Int)
(declare-const v84 Int)
(declare-const x86 Int)
(declare-const x87 Int)
(declare-const x88 Int)
(declare-const x89 Int)
(declare-const x90 Int)
(declare-const x91 Int)
(declare-const v90 Int)
(declare-const x92 Int)
(declare-const x93 Int)
(declare-const x94 Int)
(declare-const x95 Int)
(declare-const x96 Int)
(declare-const x97 Int)
(declare-const x98 Int)
(declare-const x99 Int)
(declare-const x100 Int)
(declare-const x101 Int)
(declare-const x102 Int)
(declare-const x103 Int)
(declare-const v102 Int)
(declare-const x104 Int)
(declare-const x105 Int)
(declare-const x106 Int)
(declare-const x107 Int)
(declare-const v106 Int)
(declare-const x108 Int)
(declare-const x109 Int)
(declare-const x110 Int)
(declare-const x111 Int)
(declare-const x112 Int)
(declare-const x113 Int)
(declare-const x114 Int)
(declare-const x115 Int)
(declare-const x116 Int)
(declare-const x117 Int)
(declare-const v116 Int)
(declare-const x118 Int)
(declare-const x119 Int)
(declare-const x120 Int)
(declare-const x121 Int)
(declare-const v120 Int)
(declare-const x122 Int)
(declare-const x123 Int)
(declare-const x124 Int)
(declare-const x125 Int)
(declare-const x126 Int)
(declare-const x127 Int)
(declare-const x128 Int)
(declare-const x129 Int)

(assert(and
(= x39 x109) (distinct x29 x73) (< x25 x114) (= x85 x83) (= x58 x11) (distinct x77 x91) (distinct x47 x33) (< x59 x42) (distinct x59 x70) (< x10 x78) (= x93 x66) (distinct x42 x61) (= x88 x15) (= x107 x23) (< x113 x25) (= x42 x107) (distinct x124 x16) (< x105 x53) 
(sep
(hls x0 x1 v0)
(hls x2 x3 v2)
(blk x4 x5)
(hls x6 x7 v6)
(pto x8 (c_data_t x9))
(blk x10 x11)
(hls x12 x13 v12)
(blk x14 x15)
(blk x16 x17)
(hls x18 x19 v18)
(blk x20 x21)
(hls x22 x23 v22)
(pto x24 (c_data_t x25))
(blk x26 x27)
(pto x28 (c_data_t x29))
(hls x30 x31 v30)
(hls x32 x33 v32)
(pto x34 (c_data_t x35))
(hls x36 x37 v36)
(blk x38 x39)
(pto x40 (c_data_t x41))
(pto x42 (c_data_t x43))
(blk x44 x45)
(pto x46 (c_data_t x47))
(hls x48 x49 v48)
(blk x50 x51)
(pto x52 (c_data_t x53))
(hls x54 x55 v54)
(hls x56 x57 v56)
(blk x58 x59)
(blk x60 x61)
(hls x62 x63 v62)
(pto x64 (c_data_t x65))
(pto x66 (c_data_t x67))
(blk x68 x69)
(pto x70 (c_data_t x71))
(pto x72 (c_data_t x73))
(pto x74 (c_data_t x75))
(blk x76 x77)
(blk x78 x79)
(hls x80 x81 v80)
(pto x82 (c_data_t x83))
(hls x84 x85 v84)
(pto x86 (c_data_t x87))
(pto x88 (c_data_t x89))
(hls x90 x91 v90)
(pto x92 (c_data_t x93))
(blk x94 x95)
(pto x96 (c_data_t x97))
(blk x98 x99)
(blk x100 x101)
(hls x102 x103 v102)
(pto x104 (c_data_t x105))
(hls x106 x107 v106)
(pto x108 (c_data_t x109))
(blk x110 x111)
(pto x112 (c_data_t x113))
(pto x114 (c_data_t x115))
(hls x116 x117 v116)
(blk x118 x119)
(hls x120 x121 v120)
(pto x122 (c_data_t x123))
(pto x124 (c_data_t x125))
(pto x126 (c_data_t x127))
(blk x128 x129)
)))

(check-sat)