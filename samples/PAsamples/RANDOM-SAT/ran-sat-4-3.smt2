(set-logic QF_SLAH)

(declare-datatypes (
	(data_t 0)
	) (
	((c_data_t (sz Int)))
	)
)


(declare-heap (Int data_t) 
)

;; heap chunk
(define-fun hck ((?x Int) (?y Int) (?v Int)) Bool
	(and
		(>= (- ?y ?x) 2) (<= (- ?y ?x) ?v)
		(sep
			(pto ?x (c_data_t (- ?y ?x)))
			(blk (+ ?x 1) ?y)
		)
	)
)
;; heap list
(define-fun-rec hls ((?x Int) (?y Int) (?v Int)) Bool
	(or
		(and (= ?x ?y) (_ emp Int data_t))
		(exists ((?w Int))
			(sep
				(hck ?x ?w ?v)
				(hls ?w ?y ?v)
			)
		)
	)
)

;; variables
(declare-const x0 Int)
(declare-const x1 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(declare-const x4 Int)
(declare-const x5 Int)
(declare-const x6 Int)
(declare-const x7 Int)
(declare-const x8 Int)
(declare-const x9 Int)
(declare-const x10 Int)
(declare-const x11 Int)
(declare-const x12 Int)
(declare-const x13 Int)
(declare-const x14 Int)
(declare-const x15 Int)
(declare-const x16 Int)
(declare-const x17 Int)
(declare-const x18 Int)
(declare-const x19 Int)
(declare-const x20 Int)
(declare-const x21 Int)
(declare-const x22 Int)
(declare-const x23 Int)
(declare-const x24 Int)
(declare-const x25 Int)
(declare-const x26 Int)

(declare-const z0 Int)
(declare-const z1 Int)
(declare-const z2 Int)
(declare-const z3 Int)
(declare-const z4 Int)
(declare-const z5 Int)
(declare-const z6 Int)
(declare-const z7 Int)

(declare-const sz0 Int)
(declare-const sz1 Int)

(declare-const v0 Int)
(declare-const v1 Int)
(declare-const v2 Int)
(declare-const v3 Int)
(declare-const v4 Int)
(declare-const v5 Int)
(declare-const v6 Int)
(declare-const v7 Int)
(declare-const v8 Int)
(declare-const v9 Int)
(declare-const v10 Int)
(declare-const v11 Int)
(declare-const v12 Int)
(declare-const v13 Int)
(declare-const v14 Int)
(declare-const v15 Int)
(declare-const v16 Int)
(declare-const v17 Int)
(declare-const v18 Int)
(declare-const v19 Int)

(assert
	(and
	(= v0 5)
	(< v1 8)
	(>= v2 10)
	(= v3 v4)
	(< v2 v3)
	(= (- x9 x8) v7)
	(> x12 x11)
	(<= x13 x14)
	(= (- x19 x18) 2)
	(< x19 20)
	(<= (- x21 x20) 3)
	(>= (- x22 x21) 100)
	(= x25 x26)
	(sep
		(hls x0 x1 v0)
		(hls x1 x2 v1)
		(hls x2 x3 v2)
		(hls x3 x4 v3)
		(hls x4 x5 v4)
		(pto z0 (c_data_t sz0))
		(hls x6 x7 v5)
		(hls x7 x8 v6)
		(hls x8 x9 v7)
		(hls x9 x10 v8)
		(hls x10 x11 v9)
		(hls x12 x13 v10)
		(pto z1 (c_data_t sz1))
		(hls x14 x15 v11)
		(hls x16 x17 v12)
		(hls x18 x19 v13)
		(blk z2 z3)
		(hck z6 z7 v4)
		(hls x20 x21 v14)
		(hls x21 x22 v15)
		(hls x22 x23 v16)
		(hls x23 x24 v17)
		(hls x24 x25 v18)
		(hls x25 x26 v19)
		(blk z4 z5)
	)
))

(check-sat)
;;sat 0.232025
